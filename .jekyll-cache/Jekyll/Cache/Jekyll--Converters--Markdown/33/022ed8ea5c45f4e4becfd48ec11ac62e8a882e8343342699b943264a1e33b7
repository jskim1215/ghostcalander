I":S<h2 id="1-코인-이름-크롤링">1. 코인 이름 크롤링</h2>
<p>처음에는 <code class="language-plaintext highlighter-rouge">Selenium</code>을 활용해서 직접 사이트에 들어가서 <code class="language-plaintext highlighter-rouge">html</code> 태그 찾아서 크롤링하는 방법으로 진행해보려고 했다. 근데 업비트 사이트 보안 문제인지 잘 모르겠지만 사이트에 접속이 되지를 않아서 구글링을 하던 도중 <a href="https://api.upbit.com/v1/market/all">업비트 API 사이트</a>를 통해 쉽게 이름을 크롤링 할 수 있었다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">pandas</span> <span class="kn">import</span> <span class="n">DataFrame</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="k">def</span> <span class="nf">call_coin</span><span class="p">():</span>
    <span class="c1">#coin 종류 가져오기
</span>    <span class="n">databox</span><span class="o">=</span><span class="p">[]</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.upbit.com/v1/market/all'</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">datas</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
    <span class="c1"># 데이터 프레임으로 변경
</span>    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">datas</span><span class="p">)</span>
    <span class="c1"># market 기준 한화로 변경
</span>    <span class="n">coins_krw</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'market'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'KRW'</span><span class="p">)].</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">num_index</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">num_index</span><span class="p">):</span>
        <span class="n">empty</span> <span class="o">=</span> <span class="p">[</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]]</span>
        <span class="n">databox</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">empty</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">databox</span>
</code></pre></div></div>
<h2 id="2-2월달-코인-거래-1분봉-데이터-크롤링">2. 2월달 코인 거래 1분봉 데이터 크롤링</h2>
<p>과거 코인 데이터 크롤링에 사용했던 코드를 활용해서 for문을 추가해줬다. 사이트 상에서 한 번에 가져올 수 있는 데이터가 200개라서 for문을 잘 설정해서 데이터를 모아야했다.</p>

<p>1분 봉으로 데이터를 추출할 예정이기 때문에 한 번에 60개씩 데이터를 추출해서 최대한 카운팅을 맞춰보려고 노력했다. 처음 시범 데이터를 추출했을 때 총 <code class="language-plaintext highlighter-rouge">40,320</code>개의 데이터가 나와야하는데 <code class="language-plaintext highlighter-rouge">BTC 기준</code> <code class="language-plaintext highlighter-rouge">39,829</code>개가 나오길래 사이사이 빈 곳을 어떻게 처리해야할지 고민이 됬다.</p>

<p>혹시 점검 시간이 고려되었을 가능성을 생각해서 추가로 <code class="language-plaintext highlighter-rouge">ETH</code>와 <code class="language-plaintext highlighter-rouge">NEO</code> 데이터를 비교해봤는데 아래 두 가지 방법 모두 같은 개수로 나와가지고 <code class="language-plaintext highlighter-rouge">공식 API</code>는 하다보니까 너무 많은 요청이 들어오면 에러가 발생해서 <code class="language-plaintext highlighter-rouge">비공식 API</code>로 알려진 방법을 활용했다.</p>

<h3 id="공식-api">공식 API</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">coin</span> <span class="ow">in</span> <span class="n">coin_names</span><span class="p">:</span>
    <span class="n">box</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">hour</span> <span class="ow">in</span> <span class="n">hours</span><span class="p">:</span>
            <span class="n">url</span> <span class="o">=</span> <span class="s">"https://api.upbit.com/v1/candles/minutes/1"</span>

            <span class="n">querystring</span> <span class="o">=</span> <span class="p">{</span><span class="s">"market"</span><span class="p">:</span> <span class="n">coin</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s">"to"</span><span class="p">:</span> <span class="s">"2021-02-"</span><span class="o">+</span><span class="n">day</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">hour</span><span class="o">+</span><span class="s">":00:00"</span><span class="p">,</span> <span class="s">"count"</span><span class="p">:</span> <span class="s">"60"</span><span class="p">}</span>

            <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">querystring</span><span class="p">)</span>
            <span class="n">tradedata</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
            <span class="n">sleep</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="비공식-api">비공식 API</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">coin</span> <span class="ow">in</span> <span class="n">coin_names</span><span class="p">:</span>
    <span class="n">box</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">hour</span> <span class="ow">in</span> <span class="n">hours</span><span class="p">:</span>
            <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"https://crix-api-endpoint.upbit.com/v1/crix/candles/minutes/1?code=CRIX.UPBIT."</span><span class="o">+</span><span class="n">coin</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s">"&amp;count=60&amp;to=2021-02-"</span><span class="o">+</span><span class="n">day</span><span class="o">+</span><span class="s">"%20"</span><span class="o">+</span><span class="n">hour</span><span class="o">+</span><span class="s">":00:00"</span><span class="p">)</span>
            <span class="n">tradedata</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="3-전체-코드">3. 전체 코드</h2>

<p>전체 개수가 다 다르게 나오긴 하지만 API의 문제로 생각되서 둘 중 어느 방법을 활용하던 같은 결과가 나와서 일단 그대로 사용하기로 했다. 가격의 변동성에서 패턴을 읽는 과정에는 크게 어려움이 없다고 일단은 생각하고 진행하기로 했다.</p>

<p>추후 찾아보니까 거래량이 부족한 경우 1분 봉이 형성이 안되서 데이터 개수가 모자른 경우가 발생하는 것 같다.</p>

<p>마지막으로 완성한 전체 코드는 아래 첨부한다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>

<span class="k">def</span> <span class="nf">call_coin</span><span class="p">():</span>
    <span class="c1">#coin 종류 가져오기
</span>    <span class="n">databox</span><span class="o">=</span><span class="p">[]</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.upbit.com/v1/market/all'</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">datas</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
    <span class="c1"># 데이터 프레임으로 변경
</span>    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">datas</span><span class="p">)</span>
    <span class="c1"># market 기준 한화로 변경
</span>    <span class="n">coins_krw</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'market'</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'KRW'</span><span class="p">)].</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">num_index</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">num_index</span><span class="p">):</span>
        <span class="n">empty</span> <span class="o">=</span> <span class="p">[</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">coins_krw</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">]]</span>
        <span class="n">databox</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">empty</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">databox</span>

<span class="n">days</span> <span class="o">=</span> <span class="p">[</span><span class="s">'01'</span><span class="p">,</span> <span class="s">'02'</span><span class="p">,</span> <span class="s">'03'</span><span class="p">,</span> <span class="s">'04'</span><span class="p">,</span> <span class="s">'05'</span><span class="p">,</span> <span class="s">'06'</span><span class="p">,</span> <span class="s">'07'</span><span class="p">,</span> <span class="s">'08'</span><span class="p">,</span> <span class="s">'09'</span><span class="p">,</span> <span class="s">'10'</span><span class="p">,</span> <span class="s">'11'</span><span class="p">,</span> <span class="s">'12'</span><span class="p">,</span> <span class="s">'13'</span><span class="p">,</span> <span class="s">'14'</span><span class="p">,</span> <span class="s">'15'</span><span class="p">,</span> <span class="s">'16'</span><span class="p">,</span> <span class="s">'17'</span><span class="p">,</span> <span class="s">'18'</span><span class="p">,</span> <span class="s">'19'</span><span class="p">,</span> <span class="s">'20'</span><span class="p">,</span> <span class="s">'21'</span><span class="p">,</span> <span class="s">'22'</span><span class="p">,</span> <span class="s">'23'</span><span class="p">,</span> <span class="s">'24'</span><span class="p">,</span> <span class="s">'25'</span><span class="p">,</span> <span class="s">'26'</span><span class="p">,</span> <span class="s">'27'</span><span class="p">,</span> <span class="s">'28'</span><span class="p">]</span>
<span class="n">hours</span> <span class="o">=</span> <span class="p">[</span><span class="s">'01'</span><span class="p">,</span> <span class="s">'02'</span><span class="p">,</span> <span class="s">'03'</span><span class="p">,</span> <span class="s">'04'</span><span class="p">,</span> <span class="s">'05'</span><span class="p">,</span> <span class="s">'06'</span><span class="p">,</span> <span class="s">'07'</span><span class="p">,</span> <span class="s">'08'</span><span class="p">,</span> <span class="s">'09'</span><span class="p">,</span> <span class="s">'10'</span><span class="p">,</span> <span class="s">'11'</span><span class="p">,</span> <span class="s">'12'</span><span class="p">,</span> <span class="s">'13'</span><span class="p">,</span> <span class="s">'14'</span><span class="p">,</span> <span class="s">'15'</span><span class="p">,</span> <span class="s">'16'</span><span class="p">,</span> <span class="s">'17'</span><span class="p">,</span> <span class="s">'18'</span><span class="p">,</span> <span class="s">'19'</span><span class="p">,</span> <span class="s">'20'</span><span class="p">,</span> <span class="s">'21'</span><span class="p">,</span> <span class="s">'22'</span><span class="p">,</span> <span class="s">'23'</span><span class="p">,</span> <span class="s">'24'</span><span class="p">]</span>

<span class="n">coin_names</span><span class="o">=</span><span class="n">call_coin</span><span class="p">()</span>

<span class="k">for</span> <span class="n">coin</span> <span class="ow">in</span> <span class="n">coin_names</span><span class="p">:</span>
    <span class="n">box</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">hour</span> <span class="ow">in</span> <span class="n">hours</span><span class="p">:</span>
            <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"https://crix-api-endpoint.upbit.com/v1/crix/candles/minutes/1?code=CRIX.UPBIT."</span><span class="o">+</span><span class="n">coin</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s">"&amp;count=60&amp;to=2021-02-"</span><span class="o">+</span><span class="n">day</span><span class="o">+</span><span class="s">"%20"</span><span class="o">+</span><span class="n">hour</span><span class="o">+</span><span class="s">":00:00"</span><span class="p">)</span>
            <span class="n">tradedata</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>

            <span class="k">for</span> <span class="n">trade</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">tradedata</span><span class="p">):</span>
                <span class="n">time</span> <span class="o">=</span> <span class="n">trade</span><span class="p">[</span><span class="s">'candleDateTime'</span><span class="p">]</span>
                <span class="n">timedata</span> <span class="o">=</span> <span class="n">time</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="p">]</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">time</span><span class="p">[</span><span class="mi">11</span><span class="p">:</span><span class="mi">16</span><span class="p">]</span>
                <span class="n">op</span> <span class="o">=</span> <span class="n">trade</span><span class="p">[</span><span class="s">'openingPrice'</span><span class="p">]</span>  <span class="c1"># op 는 시작 가격
</span>                <span class="n">tp</span> <span class="o">=</span> <span class="n">trade</span><span class="p">[</span><span class="s">'tradePrice'</span><span class="p">]</span>  <span class="c1"># tp 는 종가
</span>                <span class="n">lp</span> <span class="o">=</span> <span class="n">trade</span><span class="p">[</span><span class="s">'lowPrice'</span><span class="p">]</span>  <span class="c1"># lp 는 저가
</span>                <span class="n">hp</span> <span class="o">=</span> <span class="n">trade</span><span class="p">[</span><span class="s">'highPrice'</span><span class="p">]</span>  <span class="c1"># hp 는 고가
</span>                <span class="n">box</span><span class="p">[</span><span class="n">timedata</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">op</span><span class="p">,</span> <span class="n">tp</span><span class="p">,</span> <span class="n">hp</span><span class="p">,</span> <span class="n">lp</span><span class="p">]</span>

    <span class="n">tradedata</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">box</span><span class="p">)</span>
    <span class="n">tradedata</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">:</span> <span class="s">"Open Price"</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span> <span class="s">"High Price"</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="s">"Low Price"</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span> <span class="s">'Close Price'</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">transposed_tradedata</span> <span class="o">=</span> <span class="n">tradedata</span><span class="p">.</span><span class="n">transpose</span><span class="p">()</span>
    <span class="n">transposed_tradedata</span><span class="p">.</span><span class="n">to_excel</span><span class="p">(</span><span class="n">excel_writer</span><span class="o">=</span><span class="s">'C:/Users/whdtlr/Bitcoin_desktop/coins/'</span><span class="o">+</span><span class="n">coin</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s">'.xlsx'</span><span class="p">)</span>
    <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<p>현재 이렇게 크롤링 진행하면 request 함수에 오류가 발생하고 있다. 아마도 너무 많은 요청이 들어가서 오류가 발생한 것이라고 생각해서 <code class="language-plaintext highlighter-rouge">sleep</code> 함수를 활용해서 해결해보려 하고 있다.</p>
:ET